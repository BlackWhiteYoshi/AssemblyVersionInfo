using Microsoft.CodeAnalysis;

namespace AssemblyVersionInfo;

[Generator(LanguageNames.CSharp)]
public sealed class Generator : IIncrementalGenerator {
    public void Initialize(IncrementalGeneratorInitializationContext context) {
        context.RegisterSourceOutput(
            context.CompilationProvider.Select(static (Compilation compilation, CancellationToken _) => (compilation.Assembly.Identity.Name, compilation.Assembly.Identity.Version)),
            static (SourceProductionContext context, (string name, Version version) compilation) => {
                context.AddSource("Assembly.g.cs", $$"""
                    // <auto-generated/>
                    #pragma warning disable
                    #nullable enable annotations


                    namespace AssemblyVersionInfo;

                    /// <summary>
                    /// This class provides constant strings holding information about the Assembly name and version.
                    /// </summary>
                    [System.CodeDom.Compiler.GeneratedCodeAttribute("{{Assembly.NAME}}", "{{Assembly.VERSION_MAJOR_MINOR_BUILD}}")]
                    internal static class Assembly {
                        /// <summary>
                        /// The simple name of the assembly.
                        /// </summary>
                        public const string NAME = "{{compilation.name}}";


                        /// <summary>
                        /// The major component of the version number, thats usually the first number.
                        /// </summary>
                        public const string VERSION_MAJOR = "{{compilation.version.Major}}";

                        /// <summary>
                        /// The minor component of the version number, thats usually the second number.
                        /// </summary>
                        public const string VERSION_MINOR = "{{compilation.version.Minor}}";

                        /// <summary>
                        /// The build component of the version number, thats usually the third number.
                        /// </summary>
                        public const string VERSION_BUILD = "{{compilation.version.Build}}";

                        /// <summary>
                        /// The revision component of the version number, thats usually the fourth number.
                        /// </summary>
                        public const string VERSION_REVISION = "{{compilation.version.Revision}}";


                        /// <summary>
                        /// <para>The full version number:</para>
                        /// <para>{Major}.{Minor}.{Build}.{Revision}</para>
                        /// </summary>
                        public const string VERSION = "{{compilation.version}}";

                        /// <summary>
                        /// <para>Version number with only major and minor:</para>
                        /// <para>{Major}.{Minor}</para>
                        /// </summary>
                        public const string VERSION_MAJOR_MINOR = "{{compilation.version.Major}}.{{compilation.version.Minor}}";

                        /// <summary>
                        /// <para>Version number with only major, minor and build:</para>
                        /// <para>{Major}.{Minor}.{Build}</para>
                        /// </summary>
                        public const string VERSION_MAJOR_MINOR_BUILD = "{{compilation.version.Major}}.{{compilation.version.Minor}}.{{compilation.version.Build}}";
                    }

                    """);
            }
        );
    }
}
